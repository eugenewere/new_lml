"""
Django settings for lmlproject project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import sweetify
# from decouple import config

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))





# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'q%49#i*jdc@_g!q)le4ot79b9kdpa+aclq25832vrh18pg)4#='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost','127.0.0.1', 'www.lml.co.ke', 'lml.co.ke', '138.68.146.141', ]
# 192.168.100.2

# Application definition

INSTALLED_APPS = [

    'chat.apps.ChatConfig',
    'lmlappadmin.apps.LmlappadminConfig',
    'lmlapp.apps.LmlappConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'sweetify',
    # 'djcelery',
    # 'django_celery_beat',
    # 'django_celery_results',
    'django_daraja',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'lmlproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lmlproject.wsgi.application'

# ASGI_APPLICATION = "lmlproject.routing.application"
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [('127.0.0.1', 6379)],
#         },
#     },
# }

# ASGI_APPLICATION = 'lmlproject.routing.application'
# CHANNEL_LAYERS = {
#     'default': {
#          # "BACKEND": "asgi_redis.RedisChannelLayer",
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [('127.0.0.1', 6379)],
#             # "hosts": [('localhost', 6379)],
#         },
#     },
#     },


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
# libpq-dev postgresql postgresql-contrib
# if DEBUG:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
# else:
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'lmldb',
#         'USER': 'lmldbuser',
#         'PASSWORD': '*#*Johnte2536@lml',
#         'HOST': 'localhost',
#         'PORT': '',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [

    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL ='/media/'

SWEETIFY_SWEETALERT_LIBRARY = 'sweetalert2'

sweetify.DEFAULT_OPTS = {
    'showConfirmButton': False,
    'timer': 2500,
    'allowOutsideClick': True,
    'confirmButtonText': 'OK',
    'customClass': {
        'popup': 'animated tada',
    }
}

LOGIN_REDIRECT_URL = 'LML:home'
LOGIN_URL = "LML:home"


# mysite/settings.py
# Channels
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'Climatechangebasicske@gmail.com'
EMAIL_HOST_PASSWORD = 'Brandoxvilla7123'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL: False
# OPENEXCHANGERATES_API_KEY = '71501b20f84c42cfa79667487398fd93'
PAYPAL_RECEIVER_EMAIL = "sb-mobfb2963036@business.example.com"
PAYPAL_TEST = True


# CELERY_BROKER_URL = 'amqp://localhost'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'




MPESA_ENVIRONMENT='sandbox'
MPESA_CONSUMER_KEY='hAAktGjatKXAj9zAXDKLjooL799UM7bz'
MPESA_CONSUMER_SECRET='xj4MmNm90E0b1W3A'

MPESA_SHORTCODE=174379
MPESA_EXPRESS_SHORTCODE=174379

MPESA_SHORTCODE_TYPE='paybill'
MPESA_PASSKEY='bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919'
MPESA_INITIATOR_USERNAME='Shortcode 1'
MPESA_INITIATOR_SECURITY_CREDENTIAL='imUPsh/1KU0lE27PGlO0ug2snNCWiDLG0pgYZTnjyiphVLe/cr3E7tRSgygUUy1NdzX5T9xR1G99L5ztBBXFOmB2uWmOXgt52vgTo9/gQ7YcPQz/RK5KbRK7n7NIHSn8wtl3pKED4KOy0EBgw+mzDo2ildsrwnHURe1nYuyXJqSJzQN1NBW6T/qi2Eq6l9syE6EWBO62QN+MIPvKKeK2seykH4Df64qGbhJ23wEmuTs6eFRhwPX/FHfpqkMfR6nbW88jWlwxWf6l1zHVudTSC5aJ2aOlZkairFHhkp9FlsZxdx3mSkIXOqIU1DHllnPuc3iEx/5K8Q6gQyYlXsxHWA=='




# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA# MPESA
...
# Safaricom Configs

# B2C (Bulk Payment) Configs
# see https://developer.safaricom.co.ke/test_credentials
# https://developer.safaricom.co.ke/b2c/apis/post/paymentrequest

#Consumer Key
                                              #MPESA_B2C_ACCESS_KEY = config('hAAktGjatKXAj9zAXDKLjooL799UM7bz')
#Consumer Secret
                                              #MPESA_B2C_CONSUMER_SECRET = config('xj4MmNm90E0b1W3A')
# This is the encryption of the scurity Credentials I used the Developer site to encrypt it.
                                              #B2C_SECURITY_TOKEN =  config('B2C_SECURITY_TOKEN')
#InitiatorName
                                              #B2C_INITIATOR_NAME = config('B2C_INITIATOR_NAME')
# CommandID
                                              #B2C_COMMAND_ID = config('B2C_COMMAND_ID')
#PartyA
                                              #B2C_SHORTCODE = config('B2C_SHORTCODE')
# this is the url where Mpesa  will post in case of a time out. Replace http://mpesa.ngrok.io/  with your url ow here this app is running
                                              #B2C_QUEUE_TIMEOUT_URL = config('B2C_QUEUE_TIMEOUT_URL')
# this is the url where Mpesa will post the result. Replace http://mpesa.ngrok.io/  with your url ow here this app is running
                                              #B2C_RESULT_URL = config('B2C_RESULT_URL')
# this is the url where we post the B2C request to Mpesa. Replace this with the url you get from safaricom after you have passed the UATS
                                              #MPESA_URL = config('MPESA_URL')

# C2B (Paybill) Configs
# See https://developer.safaricom.co.ke/c2b/apis/post/registerurl

#Consumer Secret
                   #MPESA_C2B_ACCESS_KEY = config('hAAktGjatKXAj9zAXDKLjooL799UM7bz')
# Consumer Key
                   #MPESA_C2B_CONSUMER_SECRET = config('xj4MmNm90E0b1W3A')
# Url for registering your paybill replace it the url you get from safaricom after you have passed the UATS
                   #C2B_REGISTER_URL = config('https://sandbox.safaricom.co.ke/mpesa/c2b/v1/registerurl')
#ValidationURL
# replace http://mpesa.ngrok.io/ with your url ow here this app is running
                   #C2B_VALIDATE_URL = config('C2B_VALIDATE_URL')
#ConfirmationURL
# replace http://mpesa.ngrok.io/ with your url ow here this app is running
                   #C2B_CONFIRMATION_URL = config('C2B_CONFIRMATION_URL')
#ShortCode (Paybill)
                   #C2B_SHORT_CODE = config('4047453')
#ResponseType
                   #C2B_RESPONSE_TYPE = config('C2B_RESPONSE_TYPE')
































